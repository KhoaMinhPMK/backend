<?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// Handle preflight requests
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(204);
    exit();
}

// Only allow POST requests
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(['success' => false, 'message' => 'Method not allowed']);
    exit();
}

require_once 'config.php';

// Include PHPMailer
require_once 'PHPMailer/PHPMailer.php';
require_once 'PHPMailer/SMTP.php';
require_once 'PHPMailer/Exception.php';

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

try {
    // Get database connection
    $pdo = getDatabaseConnection();
    
    // Get JSON input
    $input = json_decode(file_get_contents('php://input'), true);
    
    if (!$input) {
        throw new Exception('Invalid JSON input');
    }
    
    $email = trim($input['email'] ?? '');
    
    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        throw new Exception('Invalid email address');
    }
    
    // Check if user exists
    $stmt = $pdo->prepare("SELECT userId, userName, email FROM user WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user) {
        throw new Exception('User not found with this email address');
    }
    
    // Generate 6-digit OTP
    $otp = str_pad(rand(0, 999999), 6, '0', STR_PAD_LEFT);
    
    // Store OTP in database with 5-minute expiration
    $expiresAt = date('Y-m-d H:i:s', strtotime('+5 minutes'));
    
    // Delete any existing unused OTPs for this user
    $stmt = $pdo->prepare("DELETE FROM password_reset_otp WHERE user_id = ? AND used = 0");
    $stmt->execute([$user['userId']]);
    
    // Insert new OTP
    $stmt = $pdo->prepare("INSERT INTO password_reset_otp (user_id, otp, expires_at, created_at) VALUES (?, ?, ?, NOW())");
    $stmt->execute([$user['userId'], $otp, $expiresAt]);
    
    // Send email using Gmail SMTP
    $emailSent = sendOTPEmailViaGmail($user['email'], $user['userName'], $otp);
    
    if (!$emailSent) {
        // If email fails, delete the stored OTP
        $stmt = $pdo->prepare("DELETE FROM password_reset_otp WHERE user_id = ? AND otp = ?");
        $stmt->execute([$user['userId'], $otp]);
        throw new Exception('Failed to send email. Please try again later.');
    }
    
    echo json_encode([
        'success' => true,
        'message' => 'OTP sent successfully to your email'
    ]);
    
} catch (Exception $e) {
    http_response_code(400);
    echo json_encode([
        'success' => false,
        'message' => $e->getMessage()
    ]);
}

/**
 * Send OTP email using Gmail SMTP
 */
function sendOTPEmailViaGmail($userEmail, $userName, $otp) {
    // Gmail SMTP Configuration
    // ‚ö†Ô∏è IMPORTANT: Replace these with your actual Gmail credentials
    // $gmailUsername = process.env.VIEGRAND_EMAIL; // Replace with your Gmail
    // $gmailPassword = process.env.VIEGRAND_PASSWORD; // Replace with your Gmail App Password
    $gmailUsername = 'viegrandapp@gmail.com'; // Replace with your Gmail
    $gmailPassword = 'udfo ghsn nomp yblz'; // Replace with your Gmail App Password
    try {
        $mail = new PHPMailer(true);
        
        // Server settings
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com';
        $mail->SMTPAuth = true;
        $mail->Username = $gmailUsername;
        $mail->Password = $gmailPassword;
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port = 587;
        $mail->CharSet = 'UTF-8';
        
        // Recipients
        $mail->setFrom($gmailUsername, 'VieGrand App');
        $mail->addAddress($userEmail, $userName);
        $mail->addReplyTo('support@viegrandapp.com', 'VieGrand Support');
        
        // Content
        $mail->isHTML(true);
        $mail->Subject = 'M√£ OTP ƒê·ªïi M·∫≠t Kh·∫©u - VieGrand App';
        $mail->Body = generatePasswordResetEmailHTML($userName, $otp);
        $mail->AltBody = generatePasswordResetEmailText($userName, $otp);
        
        // Send email
        $mail->send();
        error_log("‚úÖ Email sent successfully to: $userEmail");
        return true;
        
    } catch (Exception $e) {
        error_log("‚ùå Email sending failed: " . $mail->ErrorInfo);
        return false;
    }
}

/**
 * Generate HTML email template for password reset
 */
function generatePasswordResetEmailHTML($userName, $otp) {
    return '
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <title>M√£ OTP ƒê·ªïi M·∫≠t Kh·∫©u - VieGrand App</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 600px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f4f4f4;
            }
            .container {
                background: white;
                border-radius: 10px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 24px;
                font-weight: 600;
            }
            .header p {
                margin: 10px 0 0 0;
                opacity: 0.9;
            }
            .content {
                padding: 30px;
            }
            .otp-code {
                background: #667eea;
                color: white;
                font-size: 32px;
                font-weight: bold;
                padding: 20px;
                text-align: center;
                border-radius: 8px;
                margin: 20px 0;
                letter-spacing: 5px;
            }
            .warning {
                background: #fff3cd;
                border: 1px solid #ffeaa7;
                color: #856404;
                padding: 15px;
                border-radius: 5px;
                margin: 20px 0;
            }
            .warning ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .warning li {
                margin: 5px 0;
            }
            .footer {
                text-align: center;
                margin-top: 30px;
                color: #666;
                font-size: 14px;
                padding: 20px;
                background-color: #f8f9fa;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üîê M√£ OTP ƒê·ªïi M·∫≠t Kh·∫©u</h1>
                <p>VieGrand App - ·ª®ng d·ª•ng chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi</p>
            </div>
            
            <div class="content">
                <p>Xin ch√†o <strong>' . htmlspecialchars($userName) . '</strong>,</p>
                
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·ªïi m·∫≠t kh·∫©u cho t√†i kho·∫£n VieGrand App c·ªßa m√¨nh.</p>
                
                <p>M√£ OTP c·ªßa b·∫°n l√†:</p>
                
                <div class="otp-code">' . $otp . '</div>
                
                <div class="warning">
                    <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>
                    <ul>
                        <li>M√£ OTP n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong></li>
                        <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                        <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·ªïi m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                    </ul>
                </div>
                
                <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                
                <p>Tr√¢n tr·ªçng,<br>
                <strong>ƒê·ªôi ng≈© VieGrand App</strong></p>
            </div>
            
            <div class="footer">
                <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                <p>¬© 2024 VieGrand App. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            </div>
        </div>
    </body>
    </html>';
}

/**
 * Generate plain text version
 */
function generatePasswordResetEmailText($userName, $otp) {
    return '
M√£ OTP ƒê·ªïi M·∫≠t Kh·∫©u - VieGrand App

Xin ch√†o ' . $userName . ',

B·∫°n ƒë√£ y√™u c·∫ßu ƒë·ªïi m·∫≠t kh·∫©u cho t√†i kho·∫£n VieGrand App c·ªßa m√¨nh.

M√£ OTP c·ªßa b·∫°n l√†: ' . $otp . '

‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:
- M√£ OTP n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 5 ph√∫t
- Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai
- N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·ªïi m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y

N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.

Tr√¢n tr·ªçng,
ƒê·ªôi ng≈© VieGrand App

---
Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.
¬© 2024 VieGrand App. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.';
}
?> 